"use strict";

var _path = require("path");

var _ava = _interopRequireDefault(require("ava"));

var _nuxt = require("nuxt");

var _nuxt2 = _interopRequireDefault(require("../../nuxt.config"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// We keep the nuxt and server instance
// So we can close them at the end of the test
let nuxt = null; // Init Nuxt.js and create a server listening on localhost:4000

_ava.default.before(async () => {
  nuxt = new _nuxt.Nuxt({ ..._nuxt2.default,
    dev: false,
    rootDir: (0, _path.resolve)(__dirname, '../../')
  });
  await new _nuxt.Builder(nuxt).build();
  await nuxt.server.listen(4000, 'localhost');
}, 30000); // Example of testing only generated html


(0, _ava.default)('Route / exits and render HTML', async t => {
  const {
    html
  } = await nuxt.renderRoute('/', {});
  t.true(html.includes('Documentation'));
}); // Close server and ask nuxt to stop listening to file changes

_ava.default.after('Closing server and nuxt.js', () => {
  nuxt.close();
});
//# sourceMappingURL=D:\techtok\node_modules\.cache\ava\98020b32784a74d4cabd4fba6ee20098.js.map